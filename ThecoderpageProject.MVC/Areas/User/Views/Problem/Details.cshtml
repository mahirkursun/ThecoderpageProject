
@model UpdateProblemDTO

@{
    ViewData["Title"] = "Details";
}

<div class="card mb-3 shadow-sm" style="width: 70%; margin-left: auto; margin-right: auto; border-radius:10px;">
    <!-- Başlık, Avatar ve Durum -->
    <div class="card-header d-flex justify-content-between align-items-center">
        <div class="d-flex align-items-center">
            <img src="/images/avatar.png" alt="Problem Owner Avatar" class="rounded-circle" width="40" height="40" style="margin-right:10px;">

            <h6 class="mb-0">@Model.Users.FirstOrDefault(u => u.Id == Model.UserId)?.UserName</h6>
        </div>
        <div class="d-flex justify-content-end align-items-center" style="position: relative;">
            <span class="badge @(Model.Status == ProblemStatus.Resolved ? "bg-success" : "bg-danger") me-2 p-2">
            @(Model.Status == ProblemStatus.Resolved ? "Çözüm bulundu" : "Çözüm aranıyor")
        </span>
        <!-- Rapor Etme -->
  
            @if (User.Identity.IsAuthenticated)
            {
                var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                var existingReport = Model.Reports.FirstOrDefault(r => r.ProblemId == Model.Id && r.UserId == userId);

                if (existingReport == null)
                {
                    <form asp-controller="Report" asp-action="Create" asp-area="User" method="post" id="reportForm-@Model.Id" class="ms-2">
                        <input type="hidden" name="ProblemId" value="@Model.Id" />
                        <div class="form-group">
                            <select asp-for="ReportReason" class="form-select form-select-sm " onchange="document.getElementById('reportForm-@Model.Id').submit();">
                                <option value="">Rapor</option>
                                @foreach (var reason in Enum.GetValues(typeof(ReportReason)))
                                {
                                    <option value="@((int)reason)">@reason</option>
                                }
                            </select>
                            <span asp-validation-for="ReportReason" class="text-danger"></span>
                        </div>

                    </form>
                }
                else
                {
                    <span class="badge bg-secondary ms-2 p-2">
                        Rapor edildi.
                    </span>
                }
            }
     </div>

    </div>

    <!-- Açıklama ve Kullanıcı Bilgileri -->
    <div class="card-body">
        <div class="d-flex justify-content-between">
            <h5 class="card-title">@Model.Title</h5>
            <small class="text-muted">Tarih: @Model.CreatedAt.ToShortDateString()</small>
        </div>
        <p class="card-text">@Model.Description</p>

    </div>

    <!--Beğeni-->
    <div class="card-footer bg-light d-flex justify-content-start ">
        <div class="d-flex align-items-center me-3" style="border: 1px solid #ddd; border-radius: 10px; padding: 1px 10px;">
        @if (User.Identity.IsAuthenticated)
        {
            var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
            var hasLiked = Model.Likes.Any(l => l.ProblemId == Model.Id && l.UserId == userId);

            <form method="post" action="/User/Like/ToggleLike" class="d-flex align-items-center ">
                <input type="hidden" name="problemId" value="@Model.Id" />
                <button type="submit" class="btn btn-link p-0 d-flex align-items-center w-100" style="text-align: left;">
                    <i class="bi bi-heart-fill" style="color: @(hasLiked ? "red" : "gray"); margin:3px 3px 0 0;"></i>

                </button>
                <span class="ms-1" style="pointer-events: none; text-decoration: none; padding:5px;">@Model.Likes.Count(l => l.ProblemId == Model.Id)</span>
            </form>
        }
        
        </div>
       <div class="d-flex align-items-center" style="border: 1px solid #ddd; border-radius: 10px; padding: 3px 10px;">
            <i class="bi bi-chat-fill me-1"></i>
            <span>@Model.Comments.Count(c => c.ProblemId == Model.Id)</span>
        </div>
    </div>

    <!-- Yorum Ekleme -->
    <div class="card-footer">
        <form asp-controller="Comment" asp-action="Create" method="post" class="d-flex">
            <input type="hidden" name="ProblemId" value="@Model.Id" />
            <input type="text" name="Content" placeholder="Yorumunuzu yazın..." class="form-control me-2" id="commentInput" onkeyup="checkCommentLength()" required />
            <button type="submit" class="btn btn-primary disabled-button" id="commentButton" disabled>Yorum Ekle</button>
        </form>
    </div>

    <!-- Yorumlar -->
    <div class="card-footer">
        <ul class="list-group mt-2">
            @foreach (var comment in Model.Comments.Where(c => c.ProblemId == Model.Id).OrderByDescending(c => c.CreatedAt))
            {
                <li class="list-group-item" style="margin-bottom:5px; border-radius:10px;">
                    <div class="d-flex align-items-center justify-content-between">
                        <div class="d-flex align-items-center">
                            <img src="/images/avatar.png" alt="Comment User Avatar" class="rounded-circle" width="30" height="30">
                            <div class="ms-2">
                                <span class="fw-bold">@Model.Users.FirstOrDefault(u => u.Id == comment.UserId)?.UserName:</span>
                                <span>@comment.Content</span>
                            </div>
                        </div>
                        <small class="text-muted ms-auto">@comment.CreatedAt.ToShortDateString()</small>
                    </div>
                </li>
            }
        </ul>
    </div>
   
</div>

<!-- Geri Dön Linki -->
<div class="text-center mt-3">
    <a asp-area="" asp-controller="Home" asp-action="Index" class="btn btn-secondary">Listeye Geri Dön</a>
</div>




@section Scripts {
    <script>
        function checkCommentLength() {
            var commentInput = document.getElementById("commentInput");
            var commentButton = document.getElementById("commentButton");
            if (commentInput.value.length >= 3) {
                commentButton.disabled = false;
                commentButton.classList.remove("disabled-button");
            } else {
                commentButton.disabled = true;
                commentButton.classList.add("disabled-button");
            }
        }
    </script>
}

<style>
    .disabled-button {
        background-color: #d3d3d3; /* Light gray color */
        border-color: #d3d3d3; /* Light gray color */
        cursor: not-allowed;
    }
</style>